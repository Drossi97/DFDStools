---
// Calculadora de dinero (monedas y billetes)
---

<div class="min-h-screen bg-[#f4f7f9] pt-[67px]">
  <div class="container mx-auto px-4 py-6 max-w-4xl">
    <form id="calculadora-form" class="flex flex-col gap-6">
      <!-- Monedas -->
      <div class="border border-gray-300 rounded-md p-4 bg-white">
        <h2 class="text-xl font-bold text-gray-900 mb-4">Monedas</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4" id="monedas-grid"></div>
      </div>

      <!-- Billetes -->
      <div class="border border-gray-300 rounded-md p-4 bg-white">
        <h2 class="text-xl font-bold text-gray-900 mb-4">Billetes</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4" id="billetes-grid"></div>
      </div>

      <!-- Otros Importes -->
      <div class="border border-gray-300 rounded-md p-4 bg-white">
        <h2 class="text-xl font-bold text-gray-900 mb-4">Otros Importes</h2>
        <div class="flex gap-4 items-center">
          <input
            type="text"
            placeholder="ej: 25 + 3.4"
            id="suma_extra"
            class="flex-1 px-3 py-1.5 text-sm border border-gray-300 rounded-md text-gray-900 bg-white focus:outline-none focus:border-gray-400 placeholder:text-center"
            autocomplete="off"
          />
          <span id="suma-extra-total" class="font-bold text-lg text-gray-900 min-w-[120px] text-right">
            0.00€
          </span>
        </div>
      </div>

      <!-- Botones -->
      <div class="flex justify-center gap-4">
        <button
          type="submit"
          class="inline-flex items-center px-6 py-2 text-sm font-medium rounded-md text-white bg-[#002B45] focus:outline-none transition-shadow hover:shadow-md"
        >
          <svg class="h-4 w-4 mr-2" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect x="4" y="2" width="16" height="20" rx="2" stroke="currentColor" stroke-width="2"/>
            <line x1="9" y1="8" x2="15" y2="8" stroke="currentColor" stroke-width="2"/>
            <line x1="9" y1="12" x2="15" y2="12" stroke="currentColor" stroke-width="2"/>
            <line x1="9" y1="16" x2="13" y2="16" stroke="currentColor" stroke-width="2"/>
          </svg>
          <span>Calcular</span>
        </button>
        <button
          type="button"
          id="reiniciar-button"
          class="inline-flex items-center px-6 py-2 text-sm font-medium rounded-md text-white bg-red-600 focus:outline-none transition-shadow hover:shadow-md"
        >
          <svg class="h-4 w-4 mr-2" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M3 12C3 7.58172 6.58172 4 11 4C14.3949 4 17.2959 6.11433 18.4576 9.15264" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M21 12C21 16.4183 17.4183 20 13 20C9.60506 20 6.70414 17.8857 5.5424 14.8474" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M8 12H16" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          <span>Reiniciar</span>
        </button>
      </div>
    </form>

    <!-- Resultado -->
    <div class="flex justify-center mt-6">
      <h2 class="text-2xl font-bold text-[#007700]" id="resultado">Total: 0.00€</h2>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Configuración
    const monedas = [
      { id: "2", valor: 2 },
      { id: "1", valor: 1 },
      { id: "050", valor: 0.5 },
      { id: "020", valor: 0.2 },
      { id: "010", valor: 0.1 },
      { id: "005", valor: 0.05 },
      { id: "002", valor: 0.02 },
      { id: "001", valor: 0.01 },
    ];

    const billetes = [
      { id: "500", valor: 500 },
      { id: "200", valor: 200 },
      { id: "100", valor: 100 },
      { id: "50", valor: 50 },
      { id: "20", valor: 20 },
      { id: "10", valor: 10 },
      { id: "5", valor: 5 },
    ];

    // Validaciones
    const esDecimalValido = (valor: string): boolean => {
      if (valor.trim() === "") return true;
      const regex = /^[0-9]+(\.[0-9]+)?$/;
      return regex.test(valor.trim());
    };

    const esExpresionValida = (expresion: string): boolean => {
      if (expresion.trim() === "") return true;
      if (/,/.test(expresion)) return false;

      try {
        const resultado = eval(expresion);
        if (isNaN(resultado)) return false;
        return true;
      } catch {
        return false;
      }
    };

    // Formatear etiqueta
    const formatearEtiqueta = (elemento: any, prefijo: string): string => {
      if (prefijo === "moneda" && elemento.id.includes("0")) {
        if (elemento.id === "005") return "0.05€";
        if (elemento.id === "002") return "0.02€";
        if (elemento.id === "001") return "0.01€";
        if (elemento.id === "050") return "0.50€";
        if (elemento.id === "020") return "0.20€";
        if (elemento.id === "010") return "0.10€";
        return `0.${elemento.id.replace(/^0+/, "")}€`;
      }
      return `${elemento.id}€`;
    };

    // Crear elementos de moneda/billete
    const crearElemento = (elemento: any, prefijo: string, parent: HTMLElement) => {
      const div = document.createElement('div');
      div.className = 'flex flex-col gap-2 p-3 border border-[#E5E7EB] rounded-md bg-[#F4F7F9]';

      const label = document.createElement('span');
      label.className = 'font-semibold text-center text-gray-900';
      label.textContent = formatearEtiqueta(elemento, prefijo);

      const inputTotal = document.createElement('input');
      inputTotal.type = 'number';
      inputTotal.step = 'any';
      inputTotal.id = `${prefijo}_${elemento.id}_total`;
      inputTotal.placeholder = 'Cantidad conocida';
      inputTotal.className = 'w-full px-3 py-1.5 text-sm border border-gray-300 rounded-md text-gray-900 bg-white focus:outline-none focus:border-gray-400 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none';
      inputTotal.autocomplete = 'off';

      const inputCantidad = document.createElement('input');
      inputCantidad.type = 'number';
      inputCantidad.min = '0';
      inputCantidad.id = `${prefijo}_${elemento.id}_cantidad`;
      inputCantidad.placeholder = prefijo === 'moneda' ? 'Número de monedas' : 'Número de billetes';
      inputCantidad.className = 'w-full px-3 py-1.5 text-sm border border-gray-300 rounded-md text-gray-900 bg-white focus:outline-none focus:border-gray-400 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none';
      inputCantidad.autocomplete = 'off';

      const totalSpan = document.createElement('span');
      totalSpan.className = 'text-right font-medium text-gray-900';
      totalSpan.id = `${prefijo}_${elemento.id}_total_display`;
      totalSpan.textContent = '0.00€';

      // Calcular total de fila
      const calcularFila = () => {
        const valorConocido = inputTotal.value.trim() !== '' ? parseFloat(inputTotal.value) : 0;
        const cantidad = inputCantidad.value.trim() !== '' ? parseInt(inputCantidad.value) : 0;
        const total = valorConocido + cantidad * elemento.valor;
        totalSpan.textContent = total.toFixed(2) + '€';
      };

      inputTotal.addEventListener('input', (e) => {
        const val = (e.target as HTMLInputElement).value;
        if (!esDecimalValido(val)) {
          (e.target as HTMLInputElement).style.borderColor = 'red';
        } else {
          (e.target as HTMLInputElement).style.borderColor = '';
          calcularFila();
        }
      });

      inputCantidad.addEventListener('input', calcularFila);

      div.appendChild(label);
      div.appendChild(inputTotal);
      div.appendChild(inputCantidad);
      div.appendChild(totalSpan);
      parent.appendChild(div);
    };

    // Renderizar monedas y billetes
    const monedasGrid = document.getElementById('monedas-grid');
    const billetesGrid = document.getElementById('billetes-grid');

    if (monedasGrid) {
      monedas.forEach(m => crearElemento(m, 'moneda', monedasGrid));
    }

    if (billetesGrid) {
      billetes.forEach(b => crearElemento(b, 'billete', billetesGrid));
    }

    // Suma extra
    const sumaExtraInput = document.getElementById('suma_extra') as HTMLInputElement;
    const sumaExtraTotal = document.getElementById('suma-extra-total');

    if (sumaExtraInput && sumaExtraTotal) {
      sumaExtraInput.addEventListener('input', (e) => {
        const valor = (e.target as HTMLInputElement).value;
        
        if (esExpresionValida(valor)) {
          (e.target as HTMLInputElement).style.borderColor = '';
          
          try {
            if (valor.trim() !== '') {
              const calculado = eval(valor);
              sumaExtraTotal.textContent = `${Number(calculado).toFixed(2)}€`;
            } else {
              sumaExtraTotal.textContent = '0.00€';
            }
          } catch {
            sumaExtraTotal.textContent = '0.00€';
          }
        } else {
          (e.target as HTMLInputElement).style.borderColor = 'red';
          sumaExtraTotal.textContent = '0.00€';
        }
      });
    }

    // Calcular total general
    const form = document.getElementById('calculadora-form');
    const resultadoEl = document.getElementById('resultado');

    if (form && resultadoEl) {
      form.addEventListener('submit', (e) => {
        e.preventDefault();

        let totalMonedas = 0;
        let totalBilletes = 0;
        let hayInvalido = false;

        // Calcular monedas
        monedas.forEach((m) => {
          const inputConocido = document.getElementById(`moneda_${m.id}_total`) as HTMLInputElement;
          const inputCantidad = document.getElementById(`moneda_${m.id}_cantidad`) as HTMLInputElement;
          
          const valorConocido = inputConocido?.value.trim() || '';
          
          if (valorConocido !== '' && !esDecimalValido(valorConocido)) {
            if (inputConocido) inputConocido.style.borderColor = 'red';
            hayInvalido = true;
          } else {
            if (inputConocido) inputConocido.style.borderColor = '';
          }

          const conocidoNum = esDecimalValido(valorConocido) && valorConocido !== '' ? parseFloat(valorConocido) : 0;
          const cantidadNum = parseFloat(inputCantidad?.value || '0') || 0;

          totalMonedas += conocidoNum + cantidadNum * m.valor;
        });

        // Calcular billetes
        billetes.forEach((b) => {
          const inputConocido = document.getElementById(`billete_${b.id}_total`) as HTMLInputElement;
          const inputCantidad = document.getElementById(`billete_${b.id}_cantidad`) as HTMLInputElement;
          
          const valorConocido = inputConocido?.value.trim() || '';
          
          if (valorConocido !== '' && !esDecimalValido(valorConocido)) {
            if (inputConocido) inputConocido.style.borderColor = 'red';
            hayInvalido = true;
          } else {
            if (inputConocido) inputConocido.style.borderColor = '';
          }

          const conocidoNum = esDecimalValido(valorConocido) && valorConocido !== '' ? parseFloat(valorConocido) : 0;
          const cantidadNum = parseFloat(inputCantidad?.value || '0') || 0;

          totalBilletes += conocidoNum + cantidadNum * b.valor;
        });

        // Validar suma extra
        if (sumaExtraInput && !esExpresionValida(sumaExtraInput.value.trim())) {
          sumaExtraInput.style.borderColor = 'red';
          hayInvalido = true;
        } else if (sumaExtraInput) {
          sumaExtraInput.style.borderColor = '';
        }

        if (hayInvalido) {
          resultadoEl.textContent = 'Campos inválidos';
          resultadoEl.classList.remove('text-[#007700]');
          resultadoEl.classList.add('text-red-600');
          return;
        }

        // Calcular suma extra
        let sumaExtra = 0;
        const expr = sumaExtraInput?.value.trim() || '';
        if (expr !== '') {
          sumaExtra = eval(expr);
        }

        const total = totalMonedas + totalBilletes + sumaExtra;
        resultadoEl.textContent = `Total: ${total.toFixed(2)}€`;
        resultadoEl.classList.remove('text-red-600');
        resultadoEl.classList.add('text-[#007700]');
      });
    }

    // Reiniciar
    const reiniciarButton = document.getElementById('reiniciar-button');
    if (reiniciarButton && resultadoEl) {
      reiniciarButton.addEventListener('click', () => {
        document.querySelectorAll('input[type="number"], input[type="text"]').forEach((input) => {
          (input as HTMLInputElement).value = '';
          (input as HTMLInputElement).style.borderColor = '';
        });
        
        resultadoEl.textContent = 'Total: 0.00€';
        resultadoEl.classList.remove('text-red-600');
        resultadoEl.classList.add('text-[#007700]');

        // Actualizar totales por fila
        document.querySelectorAll('[id$="_total_display"]').forEach((span) => {
          span.textContent = '0.00€';
        });

        if (sumaExtraTotal) sumaExtraTotal.textContent = '0.00€';
      });
    }
  });
</script>

